{"version":3,"sources":["Components/feedBack/FeedbackOptions.js","Components/notification/Notification.js","Components/section/Section.js","Components/statistics/Statistics.js","Components/main/Main.js","Components/App.js","index.js","Components/feedBack/FeedbackOptions.module.css","Components/main/Main.module.css"],"names":["FeedbackOptions","onLeaveFeedback","options","map","option","name","type","className","styles","btnFeedback","onClick","Notification","massege","Section","children","title","toUpperCase","Statistics","good","neutral","bad","total","positivePercentage","Main","state","increment","e","target","setState","prevStats","countTotalFeedback","Object","values","reduce","acc","item","countPositiveFeedbackPercentage","valueFeedback","goodPercentage","Number","toFixed","this","totalfeedback","percentage","addIncrement","container","keys","Component","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"mNAsBeA,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QAC1C,OACE,mCACGA,EAAQC,KAAI,SAACC,GAAD,OACX,wBAEEC,KAAMD,EACNE,KAAK,SACLC,UAAWC,IAAOC,YAClBC,QAAST,EALX,SAOGG,GANIA,SCFAO,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCQEC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,qCACE,6BAAKA,EAAMC,gBACVF,MCQQG,EAZI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,wCAAWC,KACX,oDAAuBC,EAAvB,W,gBCHAC,E,4MACJC,MAAQ,CAAEN,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCK,UAAY,SAACC,GACX,IAAMrB,EAAOqB,EAAEC,OAAOtB,KACtB,EAAKuB,UAAS,SAACC,GAAD,sBACXxB,EAAOwB,EAAUxB,GAAQ,O,EAI9ByB,mBAAqB,kBACnBC,OAAOC,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,I,EAKjEC,gCAAkC,WAChC,IAAMC,EAAgB,EAAKP,qBACrBQ,EAAiBD,EAClB,EAAKb,MAAMN,KAAOmB,EAAiB,IACpC,EACJ,OAAOE,OAAOD,GAAgBE,QAAQ,I,4CAGxC,WACE,MAA+BC,KAAKjB,MAA5BN,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBsB,EAAgBD,KAAKX,mBACrBa,EAAaF,KAAKL,gCAClBQ,EAAeH,KAAKhB,UAE1B,OACE,mCACE,sBAAKlB,UAAWC,IAAOqC,UAAvB,UACE,cAAC,EAAD,CAAS9B,MAAM,wBAAf,SACE,cAAC,EAAD,CACEd,gBAAiB2C,EACjB1C,QAAS6B,OAAOe,KAAKL,KAAKjB,WAI9B,cAAC,EAAD,CAAST,MAAM,aAAf,SACG2B,IACC,cAAC,EAAD,CACExB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,IACPpB,mBAAoBqB,MAGtB,cAAC,EAAD,CAAc/B,QAAQ,iC,GAlDjBmC,aA2DJxB,IC3DAyB,EAJH,WACV,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,YAAc,uC,kBCAhCD,EAAOC,QAAU,CAAC,UAAY,2B","file":"static/js/main.b1ccf351.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => {\r\n  return (\r\n    <>\r\n      {options.map((option) => (\r\n        <button\r\n          key={option}\r\n          name={option}\r\n          type=\"button\"\r\n          className={styles.btnFeedback}\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ massege }) => {\r\n  return <p>{massege}</p>;\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  massege: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <>\r\n      <h2>{title.toUpperCase()}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <p>Good:{good}</p>\r\n      <p>Neutral:{neutral}</p>\r\n      <p>Bad:{bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive Feedback: {positivePercentage}%</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component, Fragment } from \"react\";\r\nimport FeedbackOptions from \"../feedBack/FeedbackOptions\";\r\nimport Notification from \"../notification/Notification\";\r\nimport Section from \"../section/Section\";\r\nimport Statistics from \"../statistics/Statistics\";\r\nimport styles from \"./Main.module.css\";\r\n\r\nclass Main extends Component {\r\n  state = { good: 0, neutral: 0, bad: 0 };\r\n\r\n  increment = (e) => {\r\n    const name = e.target.name;\r\n    this.setState((prevStats) => ({\r\n      [name]: prevStats[name] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () =>\r\n    Object.values(this.state).reduce((acc, item) => (acc += item), 0);\r\n  // const { good, neutral, bad } = this.state;\r\n  // const total = good + neutral + bad;\r\n  // return total;\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const valueFeedback = this.countTotalFeedback();\r\n    const goodPercentage = valueFeedback\r\n      ? (this.state.good / valueFeedback) * 100\r\n      : 0;\r\n    return Number(goodPercentage).toFixed(0);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const totalfeedback = this.countTotalFeedback;\r\n    const percentage = this.countPositiveFeedbackPercentage;\r\n    const addIncrement = this.increment;\r\n\r\n    return (\r\n      <>\r\n        <div className={styles.container}>\r\n          <Section title=\"Please leave feedback\">\r\n            <FeedbackOptions\r\n              onLeaveFeedback={addIncrement}\r\n              options={Object.keys(this.state)}\r\n            />\r\n          </Section>\r\n\r\n          <Section title=\"Statistics\">\r\n            {totalfeedback() ? (\r\n              <Statistics\r\n                good={good}\r\n                neutral={neutral}\r\n                bad={bad}\r\n                total={totalfeedback()}\r\n                positivePercentage={percentage()}\r\n              />\r\n            ) : (\r\n              <Notification massege=\"No feedback given\" />\r\n            )}\r\n          </Section>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Main from \"./main/Main\";\r\n\r\nconst App = () => {\r\n  return <Main />;\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnFeedback\":\"FeedbackOptions_btnFeedback__2uExb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Main_container__JCE67\"};"],"sourceRoot":""}